name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+(-[a-zA-Z0-9]+)*"

jobs:
  check-run:
    name: Check PR run
    uses: bitwarden/gh-actions/.github/workflows/check-run.yml@main

  build:
    name: Build, verify and create releases
    runs-on: ${{ matrix.runner }}
    needs: check-run
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-24.04
            arch: amd64
            runner: ubuntu-24.04
            build_target: build-linux-amd64
            verify-target: verify-binary-linux
            dependencies: musl-tools
#          - os: ubuntu-24.04
#            arch: arm64
#            runner: ubuntu-24.04 # This should be the arm runner to enable native compilation
#            build_target: build-linux-arm64
#            verify-target: verify-binary-linux
#            dependencies: gcc-aarch64-linux-gnu musl musl-dev musl-tools #This is not enough to enable cross-compilation
          - os: macos-14
            arch: amd64
            runner: macos-14
            build_target: build-macos-amd64
            verify-target: verify-binary-macos-amd64
          - os: macos-14
            arch: arm64
            runner: macos-14
            build_target: build-macos-arm64
            verify-target: verify-binary-macos-arm64
        exclude:
          - os: ubuntu-24.04 # We exclude this until we get feedback about large ARM runners
            arch: arm64
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: actions/setup-go@v5.0.2
        with:
          go-version-file: 'go.mod'
          cache: true

#      - name: Import GPG key
#        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
#        id: import_gpg
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.PASSPHRASE }}
#          echo 'GPG_FINGERPRINT=${{ steps.import_gpg.outputs.fingerprint }}' > .release-env

      - name: Install dependencies (Linux only)
        if: matrix.os == 'ubuntu-24.04'
        run: sudo apt update && sudo apt install -y ${{ matrix.dependencies }}

      - name: Install Go dependencies
        run: go mod tidy

      - name: Build binary
        run: make ${{ matrix.build_target }} BINARY_NAME="terraform-provider-${{ env.NAME }}_${{ env.GITHUB_REF_NAME }}"

      - name: Verify binary
        run: make ${{ matrix.verify_target }} BINARY_NAME="terraform-provider-${{ env.NAME }}_${{ env.GITHUB_REF_NAME }}"
