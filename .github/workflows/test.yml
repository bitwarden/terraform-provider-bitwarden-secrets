# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request_target:
    types: [ opened, synchronize ]

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

env:
  CGO_ENABLED: 1
  CGO_LDFLAGS: -lm

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: '1.9.2'
          terraform_wrapper: false
      - name: Install dependencies
        run: go mod tidy
      - name: Build binary
        run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@a4f60bb28d35aeee14e6880718e0c85ff1882e64 # v6.0.1
        with:
          version: latest
      - name: Generate documentation
        run: |
          go get github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs
          go generate ./...
      - name: Git diff
        run: |
          git diff --compact-summary --exit-code examples docs || \
            (echo; echo "Unexpected difference in directories [/examples, /docs] after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  acctest:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.5.*'
          - '1.6.*'
          - '1.7.*'
          - '1.8.*'
          - '1.9.*'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: Install dependencies
        run: go mod download
      - name: Create bw client configuration file
        run: |
          echo 'BW_API_URL="${{ secrets.BW_API_URL }}"' >> .env.local.test
          echo 'BW_API_URL="${{ secrets.BW_API_URL }}"' >> .env.local.no.access
          echo 'BW_IDENTITY_API_URL="${{ secrets.BW_IDENTITY_API_URL }}"' >> .env.local.test
          echo 'BW_IDENTITY_API_URL="${{ secrets.BW_IDENTITY_API_URL }}"' >> .env.local.no.access
          echo 'BW_ORGANIZATION_ID="${{ secrets.BW_ORGANIZATION_ID_NO_ACCESS }}"' >> .env.local.test
          echo 'BW_ORGANIZATION_ID="${{ secrets.BW_ORGANIZATION_ID_NO_ACCESS }}"' >> .env.local.no.access

          echo 'BW_ACCESS_TOKEN="${{ secrets.BW_ACCESS_TOKEN }}"' >> .env.local.test
          echo 'BW_ACCESS_TOKEN="${{ secrets.BW_ACCESS_TOKEN_NO_ACCESS }}"' >> .env.local.no.access
          echo 'BW_STATE_FILE=".bw-state-qa"' >> .env.local.test
          echo 'BW_STATE_FILE=".bw-state-qa-no-access"' >> .env.local.no.access
      - name: Run acceptance tests
        run: make testacc

  # Run acceptance tests with OpenTofu CLI versions
  acctest_tofu:
    name: Provider Acceptance Tests with OpenTofu
    needs: acctest
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        opentofu:
          - '1.6'
          - '1.7'
          - '1.8'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
      - uses: opentofu/setup-opentofu@ae80d4ecaab946d8f5ff18397fbf6d0686c6d46a # v1.0.3
        with:
          tofu_version: ${{ matrix.opentofu }}
          tofu_wrapper: false
      - name: Install dependencies
        run: go mod download
      - name: Create bw client configuration file
        run: |
          echo 'BW_API_URL="${{ secrets.BW_API_URL }}"' >> .env.local.test
          echo 'BW_API_URL="${{ secrets.BW_API_URL }}"' >> .env.local.no.access
          echo 'BW_IDENTITY_API_URL="${{ secrets.BW_IDENTITY_API_URL }}"' >> .env.local.test
          echo 'BW_IDENTITY_API_URL="${{ secrets.BW_IDENTITY_API_URL }}"' >> .env.local.no.access
          echo 'BW_ORGANIZATION_ID="${{ secrets.BW_ORGANIZATION_ID_NO_ACCESS }}"' >> .env.local.test
          echo 'BW_ORGANIZATION_ID="${{ secrets.BW_ORGANIZATION_ID_NO_ACCESS }}"' >> .env.local.no.access

          echo 'BW_ACCESS_TOKEN="${{ secrets.BW_ACCESS_TOKEN }}"' >> .env.local.test
          echo 'BW_ACCESS_TOKEN="${{ secrets.BW_ACCESS_TOKEN_NO_ACCESS }}"' >> .env.local.no.access
          echo 'BW_STATE_FILE=".bw-state-qa"' >> .env.local.test
          echo 'BW_STATE_FILE=".bw-state-qa-no-access"' >> .env.local.no.access
      - name: Run acceptance tests
        run: make testacc_tofu
