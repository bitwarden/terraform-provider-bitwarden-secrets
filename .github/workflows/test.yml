name: Tests

on:
  pull_request:
    branches:
      - "main"
    types: [ opened, synchronize ]

permissions:
  contents: read

env:
  CGO_ENABLED: 1
  CGO_LDFLAGS: '-static -Wl,-unresolved-symbols=ignore-all'
  CC: musl-gcc

jobs:
  acctest:
    name: "${{ matrix.tool }} v${{ matrix.version }}: Provider Acceptance Tests"
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        tool: [terraform, opentofu]
        version: ['1.5.*', '1.6.*', '1.7.*', '1.8.*', '1.9.*', '1.6', '1.7', '1.8']
        exclude:
          - tool: terraform
            version: '1.6'
          - tool: terraform
            version: '1.7'
          - tool: terraform
            version: '1.8'
          - tool: opentofu
            version: '1.5.*'
          - tool: opentofu
            version: '1.6.*'
          - tool: opentofu
            version: '1.7.*'
          - tool: opentofu
            version: '1.8.*'
          - tool: opentofu
            version: '1.9.*'

    steps:

      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Setup Terraform
        if: matrix.tool == 'terraform'
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - name: Setup OpenTofu
        if: matrix.tool == 'opentofu'
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false

      - name: Install Go dependencies
        run: go mod tidy

      - name: Install build dependencies
        run: sudo apt update && sudo apt install musl-tools -y

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Get Azure Key Vault secrets
        id: get-kv-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: gh-terraform-provider
          secrets: "BW-API-URL,BW-IDENTITY-API-URL,BW-ORGANIZATION-ID-NO-ACCESS,BW-ACCESS-TOKEN,BW-ACCESS-TOKEN-NO-ACCESS"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Create bw client configuration file
        run: |
          echo 'BW_API_URL="${{ steps.get-kv-secrets.outputs.BW-API-URL }}"' >> .env.local.test
          echo 'BW_API_URL="${{ steps.get-kv-secrets.outputs.BW-API-URL }}"' >> .env.local.no.access
          echo 'BW_IDENTITY_API_URL="${{ steps.get-kv-secrets.outputs.BW-IDENTITY-API-URL }}"' >> .env.local.test
          echo 'BW_IDENTITY_API_URL="${{ steps.get-kv-secrets.outputs.BW-IDENTITY-API-URL }}"' >> .env.local.no.access
          echo 'BW_ORGANIZATION_ID="${{ steps.get-kv-secrets.outputs.BW-ORGANIZATION-ID-NO-ACCESS }}"' >> .env.local.test
          echo 'BW_ORGANIZATION_ID="${{ steps.get-kv-secrets.outputs.BW-ORGANIZATION-ID-NO-ACCESS }}"' >> .env.local.no.access

          echo 'BW_ACCESS_TOKEN="${{ steps.get-kv-secrets.outputs.BW-ACCESS-TOKEN }}"' >> .env.local.test
          echo 'BW_ACCESS_TOKEN="${{ steps.get-kv-secrets.outputs.BW-ACCESS-TOKEN-NO-ACCESS }}"' >> .env.local.no.access
          echo 'BW_STATE_FILE=".bw-state-qa"' >> .env.local.test
          echo 'BW_STATE_FILE=".bw-state-qa-no-access"' >> .env.local.no.access

      - name: Run acceptance tests
        run: |
          if [[ "${{ matrix.tool }}" == "terraform" ]]; then
            make testacc
          elif [[ "${{ matrix.tool }}" == "opentofu" ]]; then
            make testacc_tofu
          fi
